# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
#       - name: Import Secrets
#         id: secrets
#         uses: hashicorp/vault-action@v2.4.2
#         with:
#           url: ${{ secrets.VAULT_ADDR }}
#           method: github
#           githubToken: ${{ secrets.VAULT_TOKEN }}
#           secrets: |
#             kv/data/pmlo/services/github/pomelo-bot gh_token ;
#             kv/data/pmlo/envs/integration-test/staging RELEASE_VERSION;
            
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
#       - uses: actions/checkout@v3
      - name: Check out repository
        id: checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ secrets.RELEASE_VERSION }}
#         with:
#           ref: ${{ steps.secrets.outputs.RELEASE_VERSION }}

      - name: Set Release Env
        run: echo "RELEASE_VERSION_ENV=${{ secrets.RELEASE_VERSION }}" >> $GITHUB_ENV
      - name: Print Release Env
        run: |
          echo $RELEASE_VERSION_ENV
          echo ${{ env.RELEASE_VERSION_ENV }}
          echo ${{ secrets.RELEASE_VERSION }}

      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      # Get Branch Name
      - name: Branch name with RELEASE_VERSION ${{ github.ref }}
        run: echo running on branch ${GITHUB_REF##*/}
      
      # Get Tag name
      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Test
        run: |
          echo $RELEASE_VERSION
          echo ${{ env.RELEASE_VERSION }}
          echo ${{ steps.checkout.outputs.ref }}
      
      # Slug
      - name: Print slug/short variables
        run: |
          echo "Slug variables"
          echo "GITHUB_BASE_REF=$GITHUB_BASE_REF"
          echo "GITHUB_HEAD_REF=$GITHUB_HEAD_REF"
          echo "GITHUB_REF=$GITHUB_REF"
          echo "GITHUB_REF_NAME=$GITHUB_REF_NAME"
          echo "GITHUB_REF_TYPE=$GITHUB_REF_TYPE"
          echo "GITHUB_SHA=$GITHUB_SHA"
